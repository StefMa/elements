"use strict";(self.webpackChunkangular_showcase=self.webpackChunkangular_showcase||[]).push([[598],{598:(g,c,a)=>{a.r(c),a.d(c,{github_version_switcher:()=>l});var h=a(898);const l=class{constructor(n){(0,h.r)(this,n),this.defaultBranch="main",this.groups=[],this.currentBranch=this.defaultBranch,this.stripString=e=>e.replace(/[^a-zA-Z0-9-]/g,"")}componentWillLoad(){const n=this.stripString(this.owner);this.cleanOwner=n;const e=this.stripString(this.repo);this.cleanRepo=e,fetch(`https://api.github.com/repos/${n}/${e}/branches`).then(t=>t.json()).then(t=>{if(t){const r=t.map(s=>s.name).filter(s=>"gh-pages"!==s&&!s.includes("dependabot")),i=[{name:"Versions",branches:[]},{name:"Features",branches:[]},{name:"Bugfixes",branches:[]}];r.forEach(s=>{s.startsWith("feat")||s.startsWith("feature")?i[1].branches.push(s):s.startsWith("fix")||s.startsWith("bugfix")?i[2].branches.push(s):i[0].branches.push(s)}),console.log(i),this.groups=i;const o=window.location.href,u=r.find(s=>o.includes(s));u&&(this.currentBranch=u)}})}handleChange(n,e,t){if(e&&t){const i=top.location.href.split("?");top.location=`https://${e}.github.io/${t}${this.defaultBranch===n?"":`/review/${n}`}/?${i[i.length-1]}`}}render(){var n;return(0,h.h)(h.H,null,(null===(n=this.groups)||void 0===n?void 0:n.length)>0&&(0,h.h)("db-select",{class:"gh-version-switcher",label:"Version",name:"Theme",onDbChange:e=>this.handleChange(e.target.value,this.cleanOwner,this.cleanRepo)},this.groups.filter(e=>{var t;return(null===(t=e.branches)||void 0===t?void 0:t.length)>0}).map(e=>(0,h.h)("optgroup",{key:e.name,label:e.name},e.branches.map((t,r)=>(0,h.h)("option",{key:`${e.name}-${t}-${r}`,value:t,selected:this.currentBranch===t},t))))))}};l.style=".gh-version-switcher select{max-width:196px}"}}]);