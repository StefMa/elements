import{r as s,h as t,H as e}from"./p-5f545e05.js";const i=class{constructor(t){s(this,t),this.defaultBranch="main",this.groups=[],this.currentBranch=this.defaultBranch,this.stripString=s=>s.replace(/[^a-zA-Z0-9-]/g,"")}componentWillLoad(){const s=this.stripString(this.owner);this.cleanOwner=s;const t=this.stripString(this.repo);this.cleanRepo=t,fetch(`https://api.github.com/repos/${s}/${t}/branches`).then((s=>s.json())).then((s=>{if(s){const t=s.map((s=>s.name)).filter((s=>"gh-pages"!==s&&!s.includes("dependabot"))),e=[{name:"Versions",branches:[]},{name:"Features",branches:[]},{name:"Bugfixes",branches:[]}];t.forEach((s=>{s.startsWith("feat")||s.startsWith("feature")?e[1].branches.push(s):s.startsWith("fix")||s.startsWith("bugfix")?e[2].branches.push(s):e[0].branches.push(s)})),console.log(e),this.groups=e;const i=window.location.href,h=t.find((s=>i.includes(s)));h&&(this.currentBranch=h)}}))}handleChange(s,t,e){if(t&&e){const i=top.location.href.split("?");top.location=`https://${t}.github.io/${e}${this.defaultBranch===s?"":`/review/${s}`}/?${i[i.length-1]}`}}render(){var s;return t(e,null,(null===(s=this.groups)||void 0===s?void 0:s.length)>0&&t("db-select",{class:"gh-version-switcher",label:"Version",name:"Theme",onDbChange:s=>this.handleChange(s.target.value,this.cleanOwner,this.cleanRepo)},this.groups.filter((s=>{var t;return(null===(t=s.branches)||void 0===t?void 0:t.length)>0})).map((s=>t("optgroup",{key:s.name,label:s.name},s.branches.map(((e,i)=>t("option",{key:`${s.name}-${e}-${i}`,value:e,selected:this.currentBranch===e},e))))))))}};i.style=".gh-version-switcher select{max-width:196px}";export{i as github_version_switcher}