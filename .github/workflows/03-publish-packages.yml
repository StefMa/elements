---
name: Publish all Packages to Registries

on:
  workflow_call:
    inputs:
      prerelease:
        description: 'Is this a Pre-Release?'
        required: true
        type: string
      release:
        description: 'Is this a Release?'
        required: true
        type: string

jobs:
  publish:
    name: Publish latest package versions to GitHub Packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # As "stencil" package we use the artifact "stencil-local-angular" - others
      # would work as well this is just the first
      matrix:
        env:
          - {
              DBUI_WORKSPACE: 'elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-stencil',
              DBUI_ARTIFACTNAME: 'stencil-default-angular',
              DBUI_THEME: 'default',
              DBUI_RELEASE: '${{ inputs.release }}',
              DBUI_PRERELEASE: '${{ inputs.prerelease }}'
            }
          - {
              DBUI_WORKSPACE: 'ngx-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-angular',
              DBUI_ARTIFACTNAME: 'output-target-default-angular',
              DBUI_THEME: 'default',
              DBUI_RELEASE: '${{ inputs.release }}',
              DBUI_PRERELEASE: '${{ inputs.prerelease }}'
            }
          - {
              DBUI_WORKSPACE: 'react-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-react',
              DBUI_ARTIFACTNAME: 'output-target-default-react',
              DBUI_THEME: 'default',
              DBUI_TEST: '${{ inputs.release }}',
              DBUI_RELEASE: '${{ inputs.release }}',
              DBUI_PRERELEASE: '${{ inputs.prerelease }}'
            }
          - {
              DBUI_WORKSPACE: 'v-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-vue',
              DBUI_ARTIFACTNAME: 'output-target-default-vue',
              DBUI_THEME: 'default',
              DBUI_RELEASE: '${{ inputs.release }}',
              DBUI_PRERELEASE: '${{ inputs.prerelease }}'
            }
          - {
              DBUI_WORKSPACE: 'elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-stencil',
              DBUI_ARTIFACTNAME: 'stencil-enterprise-angular',
              DBUI_THEME: 'enterprise',
              DBUI_RELEASE: '${{ inputs.release }}',
              DBUI_PRERELEASE: '${{ inputs.prerelease }}'
            }
          - {
              DBUI_WORKSPACE: 'ngx-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-angular',
              DBUI_ARTIFACTNAME: 'output-target-enterprise-angular',
              DBUI_THEME: 'enterprise',
              DBUI_RELEASE: '${{ inputs.release }}',
              DBUI_PRERELEASE: '${{ inputs.prerelease }}'
            }
          - {
              DBUI_WORKSPACE: 'react-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-react',
              DBUI_ARTIFACTNAME: 'output-target-enterprise-react',
              DBUI_THEME: 'enterprise',
              DBUI_RELEASE: '${{ inputs.release }}',
              DBUI_PRERELEASE: '${{ inputs.prerelease }}'
            }
          - {
              DBUI_WORKSPACE: 'v-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-vue',
              DBUI_ARTIFACTNAME: 'output-target-enterprise-vue',
              DBUI_THEME: 'enterprise',
              DBUI_RELEASE: '${{ inputs.release }}',
              DBUI_PRERELEASE: '${{ inputs.prerelease }}'
            }
        registries: [npm, github]
    env: ${{ matrix.env }}
    steps:
      - name: TEST
        run: |
          echo "prerelease?: ${{ inputs.prerelease }}"
          echo "release?: ${{ inputs.release }}"
          echo "prerelease env is?: ${{ inputs.prerelease }}"
          echo "release env is?: ${{ env.DBUI_RELEASE }}"
          echo "workspace is?: ${{ env.DBUI_ARTIFACTNAME }}"

      - name: ‚¨á Checkout repo
        uses: actions/checkout@v3

      - name: üîÑ Init Cache
        uses: ./.github/actions/npm-cache

      - name: ‚¨á Download local package build artifacts
        uses: ./.github/actions/download-tar-artifact
        with:
          name: ${{ env.DBUI_ARTIFACTNAME}}
          path: packages/${{ env.DBUI_PACKAGEPATH}}

      - name: conditinal test
        run: |
          if [[ ${{ inputs.prerelease }} == true ]]; then
            echo "Prerelease (env) is: ${{ inputs.prerelease }}"
          fi
          if [[ ${{ env.DBUI_RELEASE }} == true ]]; then
            echo "Release (env) is: ${{ env.DBUI_RELEASE }}"
          fi
          if [[ ${{ inputs.prerelease }} == true ]]; then
            echo "Prerelease (inputs) is: ${{ inputs.prerelease }}"
          fi
          if [[ ${{ env.DBUI_RELEASE }} == true ]]; then
            echo "Prerelease (inputs) is: ${{ inputs.release }}"
          fi

      - name: üõ† List package.json (BEFORE)
        run: |
          cat packages/${{ env.DBUI_PACKAGEPATH }}/package.json

      - name: üè∑ Get and Set stable (LATEST) Package Version on Env
        if: ${{ env.DBUI_RELEASE == 'true' }}
        uses: ./.github/actions/get-package-version-latest

      - name: üè∑ Get and Set experimental (NEXT) Package Version on Env
        if: ${{ inputs.prerelease == 'true' }}
        uses: ./.github/actions/get-package-version-next

      - name: üõ† Forge all packages version numbers
        run: |
          echo "Forge all packages..."
          echo "which package verison ?: ${{ env.VALID_SEMVER_VERSION }}"
          npm version --no-git-tag-version ${{ env.VALID_SEMVER_VERSION }} --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}

      - name: üõ† Forge enterprise packages
        if: ${{ env.DBUI_THEME == 'enterprise' }}
        #   run: |
        #     echo "which packages?: ${{ inputs.registry }}"
        #     echo "which verison ?: ${{ env.VALID_SEMVER_VERSION }}"
        #     echo "TODO: forge enterprise versions..."
        #     # npm pkg set 'name'='@db-ui/elements-${{ matrix.themes }}' --workspace=@db-ui/elements
        #     # npx -y replace-in-file @db-ui/elements @db-ui/elements-enterprise packages/**/dist/**/*.*
        #     # npm pkg set 'dependencies.@db-ui-elements-enterprise'='1.1.1' --workspace=@db-ui/ngx-elements
        run: |
          echo "Forge enterprise string replacement..."
          npx -y replace-in-file @db-ui/elements @db-ui/elements-enterprise packages/**/dist/**/*.*
          # npx -y replace-in-file @db-ui/elements @db-ui/elements-enterprise packages/**/dist/**/*.*
          # npm pkg set 'dependencies.@db-ui-elements-enterprise'='1.1.1' --workspace=@db-ui/ngx-elements
          # npx -y replace-in-file @db-ui/elements @db-ui/elements-enterprise packages/**/dist/**/*.*
          # npm pkg set 'dependencies.@db-ui/elements'='${{ env.VALID_SEMVER_VERSION }}' --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}
          # npm pkg set 'name'='@db-ui/${{ env.DBUI_WORKSPACE }}-${{ env.DBUI_WORKSPACE }}-${{ env.DBUI_THEME}}' --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}

      - name: üõ† Forge default output target packages dependency
        if: ${{ env.DBUI_THEME == 'default' && env.DBUI_WORKSPACE != 'elements' }}
        run: |
          echo "Forge default output target packages dependency..."
          echo "which verison ?: ${{ env.VALID_SEMVER_VERSION }}"
          npm pkg set 'dependencies.@db-ui/elements'='${{ env.VALID_SEMVER_VERSION }}' --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}

      - name: üõ† Forge enterprise output target packages dependency
        if: ${{ env.DBUI_THEME == 'enterprise' && env.DBUI_WORKSPACE != 'enterprise' }}
        run: |
          echo "Forge enterprise output target packages dependency..."
          echo "which verison ?: ${{ env.VALID_SEMVER_VERSION }}"
          npm pkg set 'dependencies.@db-ui/elements-enterprise'='${{ env.VALID_SEMVER_VERSION }}' --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}

      - name: üõ† Forge enterprise packages name
        if: ${{ env.DBUI_THEME == 'enterprise' }}
        run: |
          echo "Forge enterprise package name..."
          npm pkg set 'name'='@db-ui/${{ env.DBUI_WORKSPACE }}-${{ env.DBUI_THEME}}' --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}

      - name: üõ† List package.json (AFTER)
        run: |
          cat packages/${{ env.DBUI_PACKAGEPATH }}/package.json

      - name: Authenticate with NPM Registry
        if: ${{ matrix.registries == 'npm'}}
        uses: ./.github/actions/auth-with-registry
        with:
          registry: '//npm.pkg.github.com/'
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TEST_TOKEN}}

      - name: Authenticate with GitHub Registry
        uses: ./.github/actions/auth-with-registry
        if: ${{ matrix.registries == 'github'}}
        with:
          registry: '//npm.pkg.github.com/'
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TEST_TOKEN}}

      - name: üì∞ Publish stable (LATEST) default Package to Registry (dry run)
        if: ${{ env.DBUI_RELEASE == 'true' && env.DBUI_THEME == 'default' }}
        run: npm publish --dry-run --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}

      - name: üì∞ Publish experimental (NEXT) default Package to Registry (dry run)
        if: ${{ inputs.prerelease == 'true' && env.DBUI_THEME == 'default' }}
        run: npm publish --tag next --dry-run --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}

      - name: üì∞ Publish stable (LATEST) enterprise Package to Registry (dry run)
        if: ${{ env.DBUI_RELEASE == 'true' && env.DBUI_THEME == 'enterprise' }}
        run: npm publish --dry-run --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}-${{ env.DBUI_THEME }}

      - name: üì∞ Publish experimental (NEXT) enterprise Package to Registry (dry run)
        if: ${{ inputs.prerelease == 'true' && env.DBUI_THEME == 'enterprise' }}
        run: npm publish --tag next --dry-run --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}-${{ env.DBUI_THEME }}

      # - name: üì∞ Publish to Package Registry (dry run)
      #   uses: ./.github/actions/publish-to-registry
      #   env:
      #     DBUI_WORKSPACE: ${{¬†env.DBUI_WORKSPACE }}

      - name: Pack tarball default
        if: ${{ env.DBUI_THEME == 'default' }}
        run: npm pack --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}

      - name: Pack tarball enterprise
        if: ${{ env.DBUI_THEME == 'enterprise' }}
        run: npm pack --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}-${{ env.DBUI_THEME }}

      - name: ‚¨Ü Upload Package Artifact ${{ matrix.registries }}-${{ env.DBUI_ARTIFACTNAME }}
        if: ${{ env.DBUI_THEME == 'default' }}
        uses: ./.github/actions/upload-tar-artifact
        with:
          name: package-${{ matrix.registries }}-${{ env.DBUI_ARTIFACTNAME }}
          path: db-ui-${{ env.DBUI_WORKSPACE }}-${{ env.VALID_SEMVER_VERSION }}.tgz

      - name: ‚¨Ü Upload Package Artifact ${{ matrix.registries }}-${{ env.DBUI_ARTIFACTNAME }}
        if: ${{ env.DBUI_THEME == 'enterprise' }}
        uses: ./.github/actions/upload-tar-artifact
        with:
          name: package-${{ matrix.registries }}-${{ env.DBUI_ARTIFACTNAME }}
          path: db-ui-${{ env.DBUI_WORKSPACE }}-${{ env.DBUI_THEME }}-${{ env.VALID_SEMVER_VERSION }}.tgz
