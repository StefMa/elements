import{r as c,h,H as l}from"./index.98a5e33e.js";import"./vendor.fa1fd10d.js";const u=".gh-version-switcher select{max-width:196px}",p=class{constructor(n){c(this,n),this.defaultBranch="main",this.groups=[],this.currentBranch=this.defaultBranch,this.stripString=t=>t.replace(/[^a-zA-Z0-9-]/g,"")}componentWillLoad(){const n=this.stripString(this.owner);this.cleanOwner=n;const t=this.stripString(this.repo);this.cleanRepo=t,fetch(`https://api.github.com/repos/${n}/${t}/branches`).then(e=>e.json()).then(e=>{if(e){const i=e.map(s=>s.name).filter(s=>s!=="gh-pages"&&!s.includes("dependabot")),r=[{name:"Versions",branches:[]},{name:"Features",branches:[]},{name:"Bugfixes",branches:[]}];i.forEach(s=>{s.startsWith("feat")||s.startsWith("feature")?r[1].branches.push(s):s.startsWith("fix")||s.startsWith("bugfix")?r[2].branches.push(s):r[0].branches.push(s)}),console.log(r),this.groups=r;const a=window.location.href,o=i.find(s=>a.includes(s));o&&(this.currentBranch=o)}})}handleChange(n,t,e){if(t&&e){const r=top.location.href.split("?"),a=r[r.length-1];top.location=`https://${t}.github.io/${e}${this.defaultBranch===n?"":`/review/${n}`}/?${a}`}}render(){var n;return h(l,null,((n=this.groups)===null||n===void 0?void 0:n.length)>0&&h("db-select",{class:"gh-version-switcher",label:"Version",name:"Theme",onDbChange:t=>this.handleChange(t.target.value,this.cleanOwner,this.cleanRepo)},this.groups.filter(t=>{var e;return((e=t.branches)===null||e===void 0?void 0:e.length)>0}).map(t=>h("optgroup",{key:t.name,label:t.name},t.branches.map((e,i)=>h("option",{key:`${t.name}-${e}-${i}`,value:e,selected:this.currentBranch===e},e))))))}};p.style=u;export{p as github_version_switcher};
