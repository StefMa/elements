{"version":3,"file":"static/js/899.e370484f.chunk.js","mappings":"8NAIMA,EAAqB,WACzB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GAIvBE,KAAKC,cAAgB,OACrBD,KAAKE,OAAS,GACdF,KAAKG,cAAgBH,KAAKC,cAC1BD,KAAKI,YAAc,SAACC,GAClB,OAAOA,EAAMC,QAAQ,iBAAkB,KAVlB,gDAazB,WAAoB,WACZC,EAASP,KAAKI,YAAYJ,KAAKQ,OACrCR,KAAKS,WAAaF,EAClB,IAAMG,EAAQV,KAAKI,YAAYJ,KAAKW,MACpCX,KAAKY,UAAYF,EACjBG,MAAM,gCAAD,OAAiCN,EAAjC,YAA2CG,EAA3C,cACFI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACP,GAAIA,EAAM,CACR,IAAMC,EAAcD,EACjBE,KAAI,SAACC,GAAD,OAAYA,EAAOC,QACvBC,QAAO,SAACF,GAAD,MAAuB,aAAXA,IAA0BA,EAAOG,SAAS,iBAC1DC,EAAY,CAChB,CAAEH,KAAM,WAAYI,SAAU,IAC9B,CAAEJ,KAAM,WAAYI,SAAU,IAC9B,CAAEJ,KAAM,WAAYI,SAAU,KAEhCP,EAAYQ,SAAQ,SAACN,GACfA,EAAOO,WAAW,SAAWP,EAAOO,WAAW,WACjDH,EAAU,GAAGC,SAASG,KAAKR,GAEpBA,EAAOO,WAAW,QACzBP,EAAOO,WAAW,UAClBH,EAAU,GAAGC,SAASG,KAAKR,GAG3BI,EAAU,GAAGC,SAASG,KAAKR,MAI/BS,QAAQC,IAAIN,GACZ,EAAKtB,OAASsB,EACd,IAAMO,EAAaC,OAAOC,SAASC,KAC7BC,EAAcjB,EAAYkB,MAAK,SAAChB,GAAD,OAAYW,EAAWR,SAASH,MACjEe,IACF,EAAKhC,cAAgBgC,SAhDJ,0BAsDzB,SAAaf,EAAQiB,EAAYC,GAC/B,GAAID,GAAcC,EAAW,CAC3B,IACMC,EADaC,IAAIP,SAASC,KACJO,MAAM,KAC5BC,EAAWH,EAASA,EAASI,OAAS,GAC5CH,IAAIP,SAAJ,kBAA0BI,EAA1B,sBAAkDC,GAAlD,OAA8DtC,KAAKC,gBAAkBmB,EAAS,GAAhC,kBAAgDA,GAA9G,aAA2HsB,MA3DtG,oBA8DzB,WAAS,IACHE,EADG,OAEP,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAA8B,QAAtBF,EAAK5C,KAAKE,cAA2B,IAAP0C,OAAgB,EAASA,EAAGD,QAAU,IAAME,EAAAA,EAAAA,GAAE,YAAa,CAAEE,MAAO,sBAAuBC,MAAO,UAAW3B,KAAM,QAAS4B,WAAY,SAACC,GAAD,OAAW,EAAKC,aAAaD,EAAME,OAAO/C,MAAO,EAAKI,WAAY,EAAKG,aAAcZ,KAAKE,OACrRoB,QAAO,SAAC+B,GAAY,IAAIT,EAAI,OAAkC,QAAzBA,EAAKS,EAAM5B,gBAA6B,IAAPmB,OAAgB,EAASA,EAAGD,QAAU,KAC5GxB,KAAI,SAACkC,GAAD,OAAYR,EAAAA,EAAAA,GAAE,WAAY,CAAES,IAAKD,EAAMhC,KAAM2B,MAAOK,EAAMhC,MAAQgC,EAAM5B,SAASN,KAAI,SAACC,EAAQmC,GAAT,OAAoBV,EAAAA,EAAAA,GAAE,SAAU,CAAES,IAAK,GAAF,OAAKD,EAAMhC,KAAX,YAAmBD,EAAnB,YAA6BmC,GAASlD,MAAOe,EAAQoC,SAAU,EAAKrD,gBAAkBiB,GAAUA,gBAlE1M,KAqE3BvB,EAAsB4D,MAvEW","sources":["../../../packages/db-ui-elements-stencil/dist/esm/github-version-switcher.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-7b41cb22.js';\n\nconst githubVersionSwitcherCss = \".gh-version-switcher select{max-width:196px}\";\n\nconst GithubVersionSwitcher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Provides the defaultBranch of the repo\n     */\n    this.defaultBranch = 'main';\n    this.groups = [];\n    this.currentBranch = this.defaultBranch;\n    this.stripString = (value) => {\n      return value.replace(/[^a-zA-Z0-9-]/g, '');\n    };\n  }\n  componentWillLoad() {\n    const cOwner = this.stripString(this.owner);\n    this.cleanOwner = cOwner;\n    const cRepo = this.stripString(this.repo);\n    this.cleanRepo = cRepo;\n    fetch(`https://api.github.com/repos/${cOwner}/${cRepo}/branches`)\n      .then((response) => response.json())\n      .then((data) => {\n      if (data) {\n        const branchNames = data\n          .map((branch) => branch.name)\n          .filter((branch) => branch !== 'gh-pages' && !branch.includes('dependabot'));\n        const tmpGroups = [\n          { name: 'Versions', branches: [] },\n          { name: 'Features', branches: [] },\n          { name: 'Bugfixes', branches: [] }\n        ];\n        branchNames.forEach((branch) => {\n          if (branch.startsWith('feat') || branch.startsWith('feature')) {\n            tmpGroups[1].branches.push(branch);\n          }\n          else if (branch.startsWith('fix') ||\n            branch.startsWith('bugfix')) {\n            tmpGroups[2].branches.push(branch);\n          }\n          else {\n            tmpGroups[0].branches.push(branch);\n          }\n        });\n        // eslint-disable-next-line no-console\n        console.log(tmpGroups);\n        this.groups = tmpGroups;\n        const currentUrl = window.location.href;\n        const foundBranch = branchNames.find((branch) => currentUrl.includes(branch));\n        if (foundBranch) {\n          this.currentBranch = foundBranch;\n        }\n      }\n    });\n  }\n  // eslint-disable-next-line @stencil/own-methods-must-be-private\n  handleChange(branch, localOwner, localRepo) {\n    if (localOwner && localRepo) {\n      const currentUrl = top.location.href;\n      const urlPaths = currentUrl.split('?');\n      const lastPath = urlPaths[urlPaths.length - 1];\n      top.location = `https://${localOwner}.github.io/${localRepo}${this.defaultBranch === branch ? '' : `/review/${branch}`}/?${lastPath}`;\n    }\n  }\n  render() {\n    var _a;\n    return (h(Host, null, ((_a = this.groups) === null || _a === void 0 ? void 0 : _a.length) > 0 && (h(\"db-select\", { class: \"gh-version-switcher\", label: \"Version\", name: \"Theme\", onDbChange: (event) => this.handleChange(event.target.value, this.cleanOwner, this.cleanRepo) }, this.groups\n      .filter((group) => { var _a; return ((_a = group.branches) === null || _a === void 0 ? void 0 : _a.length) > 0; })\n      .map((group) => (h(\"optgroup\", { key: group.name, label: group.name }, group.branches.map((branch, index) => (h(\"option\", { key: `${group.name}-${branch}-${index}`, value: branch, selected: this.currentBranch === branch }, branch))))))))));\n  }\n};\nGithubVersionSwitcher.style = githubVersionSwitcherCss;\n\nexport { GithubVersionSwitcher as github_version_switcher };\n"],"names":["GithubVersionSwitcher","hostRef","registerInstance","this","defaultBranch","groups","currentBranch","stripString","value","replace","cOwner","owner","cleanOwner","cRepo","repo","cleanRepo","fetch","then","response","json","data","branchNames","map","branch","name","filter","includes","tmpGroups","branches","forEach","startsWith","push","console","log","currentUrl","window","location","href","foundBranch","find","localOwner","localRepo","urlPaths","top","split","lastPath","length","_a","h","Host","class","label","onDbChange","event","handleChange","target","group","key","index","selected","style"],"sourceRoot":""}