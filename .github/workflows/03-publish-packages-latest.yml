---
name: Publish latest GitHub Packages

on:
  workflow_call:
    inputs:
      registry:
        description: 'Name of registry'
        required: true
        type: string
      theme:
        description: 'Name of theme'
        required: true
        type: string

jobs:
  publish:
    name: Publish latest package versions to GitHub Packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # As "stencil" package we use the artifact "stencil-local-angular" - others
      # would work as well this is just the first
      matrix:
        env:
          - {
              DBUI_WORKSPACE: 'elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-stencil',
              DBUI_ARTIFACTNAME: 'stencil-default-angular'
            }
          - {
              DBUI_WORKSPACE: 'ngx-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-angular',
              DBUI_ARTIFACTNAME: 'output-target-default-angular'
            }
          - {
              DBUI_WORKSPACE: 'react-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-react',
              DBUI_ARTIFACTNAME: 'output-target-default-react'
            }
          - {
              DBUI_WORKSPACE: 'v-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-vue',
              DBUI_ARTIFACTNAME: 'output-target-default-vue'
            }
          - {
              DBUI_WORKSPACE: 'elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-stencil',
              DBUI_ARTIFACTNAME: 'stencil-enterprise-angular'
            }
          - {
              DBUI_WORKSPACE: 'ngx-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-angular',
              DBUI_ARTIFACTNAME: 'output-target-enterprise-angular'
            }
          - {
              DBUI_WORKSPACE: 'react-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-react',
              DBUI_ARTIFACTNAME: 'output-target-enterprise-react'
            }
          - {
              DBUI_WORKSPACE: 'v-elements',
              DBUI_PACKAGEPATH: 'db-ui-elements-vue',
              DBUI_ARTIFACTNAME: 'output-target-enterprise-vue'
            }
    env: ${{ matrix.env }}
    steps:
      - name: ‚¨á Checkout repo
        uses: actions/checkout@v3

      - name: üîÑ Init Cache
        uses: ./.github/actions/npm-cache

      - name: ‚¨á Download local package build artifacts
        uses: ./.github/actions/download-tar-artifact
        with:
          name: ${{ env.DBUI_ARTIFACTNAME}}
          path: packages/${{ env.DBUI_PACKAGEPATH}}

      - name: üè∑ Get and Set Package Version on Env
        uses: ./.github/actions/get-package-version

      # - name: üõ† Forge enterprise packages
      #   if: ${{ inputs.theme == 'enterprise' }}
      #   run: |
      #     echo "which packages?: ${{ inputs.registry }}"
      #     echo "which verison ?: ${{ env.VALID_SEMVER_VERSION }}"
      #     echo "TODO: forge enterprise versions..."
      #     # npm pkg set 'name'='@db-ui/elements-${{ matrix.themes }}' --workspace=@db-ui/elements
      #     # npx -y replace-in-file @db-ui/elements @db-ui/elements-enterprise packages/**/dist/**/*.*
      #     # npm pkg set 'dependencies.@db-ui-elements-enterprise'='1.1.1' --workspace=@db-ui/ngx-elements

      - name: üõ† Forge default packages
        if: ${{ inputs.theme != 'enterprise' }}
        run: |
          echo "which packages?: ${{ inputs.registry }}"
          echo "which verison ?: ${{ env.VALID_SEMVER_VERSION }}"
          npm pkg set 'dependencies.@db-ui/elements'='${{ env.VALID_SEMVER_VERSION }}' --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}
          npm version --no-git-tag-version ${{ env.VALID_SEMVER_VERSION }} --workspace=@db-ui/${{ env.DBUI_WORKSPACE }}
          cat packages/${{ env.DBUI_PACKAGEPATH }}/package.json

      - name: Authenticate with NPM Registry
        if: ${{ inputs.registry == 'npm' }}
        uses: ./.github/actions/auth-with-registry
        with:
          registry: '//npm.pkg.github.com/'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TEST_TOKEN}}

      - name: Authenticate with GitHub Registry
        if: ${{ inputs.registry == 'github' }}
        uses: ./.github/actions/auth-with-registry
        with:
          registry: '//npm.pkg.github.com/'
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TEST_TOKEN}}

      - name: üì∞ Publish latest version to GitHub Packages (dry run)
        uses: ./.github/actions/publish-latest-to-registry
